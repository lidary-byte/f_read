// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'entity/book_source.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 582184422267349205),
      name: 'BookSource',
      lastPropertyId: const obx_int.IdUid(25, 5038319735610167003),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4733139263669717427),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2983222372259417304),
            name: 'bookSourceUrl',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(1, 2916551499677249899)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6673200409724924938),
            name: 'bookSourceName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6266592589535920053),
            name: 'bookSourceGroup',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 283960877644028211),
            name: 'bookSourceType',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1767844813674542105),
            name: 'bookUrlPattern',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7533956667854397931),
            name: 'customOrder',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7310531095245693401),
            name: 'enabled',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4338094638491341136),
            name: 'enabledExplore',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 876896019473140971),
            name: 'jsLib',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 6367990788222227711),
            name: 'enabledCookieJar',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 5513559096239790450),
            name: 'concurrentRate',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 8646997654547057428),
            name: 'header',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 8132528991198583768),
            name: 'loginUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 1766400142347752173),
            name: 'loginUi',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 9021496903993646398),
            name: 'loginCheckJs',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 4502565130180493096),
            name: 'coverDecodeJs',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 7062756293380543233),
            name: 'bookSourceComment',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 5029971898160614831),
            name: 'variableComment',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 1828261572464326413),
            name: 'lastUpdateTime',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 4269773149807383502),
            name: 'respondTime',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 2752124115165274940),
            name: 'weight',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 8721633627707761547),
            name: 'exploreUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 2724060932976125735),
            name: 'exploreScreen',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(25, 5038319735610167003),
            name: 'searchUrl',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 582184422267349205),
      lastIndexId: const obx_int.IdUid(1, 2916551499677249899),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    BookSource: obx_int.EntityDefinition<BookSource>(
        model: _entities[0],
        toOneRelations: (BookSource object) => [],
        toManyRelations: (BookSource object) => {},
        getId: (BookSource object) => object.id,
        setId: (BookSource object, int id) {
          object.id = id;
        },
        objectToFB: (BookSource object, fb.Builder fbb) {
          final bookSourceUrlOffset = fbb.writeString(object.bookSourceUrl);
          final bookSourceNameOffset = fbb.writeString(object.bookSourceName);
          final bookSourceGroupOffset = object.bookSourceGroup == null
              ? null
              : fbb.writeString(object.bookSourceGroup!);
          final bookUrlPatternOffset = object.bookUrlPattern == null
              ? null
              : fbb.writeString(object.bookUrlPattern!);
          final jsLibOffset =
              object.jsLib == null ? null : fbb.writeString(object.jsLib!);
          final concurrentRateOffset = object.concurrentRate == null
              ? null
              : fbb.writeString(object.concurrentRate!);
          final headerOffset =
              object.header == null ? null : fbb.writeString(object.header!);
          final loginUrlOffset = object.loginUrl == null
              ? null
              : fbb.writeString(object.loginUrl!);
          final loginUiOffset =
              object.loginUi == null ? null : fbb.writeString(object.loginUi!);
          final loginCheckJsOffset = object.loginCheckJs == null
              ? null
              : fbb.writeString(object.loginCheckJs!);
          final coverDecodeJsOffset = object.coverDecodeJs == null
              ? null
              : fbb.writeString(object.coverDecodeJs!);
          final bookSourceCommentOffset = object.bookSourceComment == null
              ? null
              : fbb.writeString(object.bookSourceComment!);
          final variableCommentOffset = object.variableComment == null
              ? null
              : fbb.writeString(object.variableComment!);
          final exploreUrlOffset = object.exploreUrl == null
              ? null
              : fbb.writeString(object.exploreUrl!);
          final exploreScreenOffset = object.exploreScreen == null
              ? null
              : fbb.writeString(object.exploreScreen!);
          final searchUrlOffset = object.searchUrl == null
              ? null
              : fbb.writeString(object.searchUrl!);
          fbb.startTable(26);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, bookSourceUrlOffset);
          fbb.addOffset(2, bookSourceNameOffset);
          fbb.addOffset(3, bookSourceGroupOffset);
          fbb.addInt64(4, object.bookSourceType);
          fbb.addOffset(5, bookUrlPatternOffset);
          fbb.addInt64(6, object.customOrder);
          fbb.addBool(7, object.enabled);
          fbb.addBool(8, object.enabledExplore);
          fbb.addOffset(9, jsLibOffset);
          fbb.addBool(10, object.enabledCookieJar);
          fbb.addOffset(11, concurrentRateOffset);
          fbb.addOffset(12, headerOffset);
          fbb.addOffset(13, loginUrlOffset);
          fbb.addOffset(14, loginUiOffset);
          fbb.addOffset(15, loginCheckJsOffset);
          fbb.addOffset(16, coverDecodeJsOffset);
          fbb.addOffset(17, bookSourceCommentOffset);
          fbb.addOffset(18, variableCommentOffset);
          fbb.addInt64(19, object.lastUpdateTime);
          fbb.addInt64(20, object.respondTime);
          fbb.addInt64(21, object.weight);
          fbb.addOffset(22, exploreUrlOffset);
          fbb.addOffset(23, exploreScreenOffset);
          fbb.addOffset(24, searchUrlOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final bookSourceUrlParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final bookSourceNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final bookSourceGroupParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final bookSourceTypeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final bookUrlPatternParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 14);
          final customOrderParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final enabledParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 18, false);
          final enabledExploreParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 20, false);
          final jsLibParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 22);
          final enabledCookieJarParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 24);
          final concurrentRateParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 26);
          final headerParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 28);
          final loginUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 30);
          final loginUiParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 32);
          final loginCheckJsParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 34);
          final coverDecodeJsParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 36);
          final bookSourceCommentParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 38);
          final variableCommentParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 40);
          final lastUpdateTimeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 42, 0);
          final respondTimeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 44, 0);
          final weightParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 46, 0);
          final exploreUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 48);
          final exploreScreenParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 50);
          final searchUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 52);
          final object = BookSource(
              bookSourceUrl: bookSourceUrlParam,
              bookSourceName: bookSourceNameParam,
              bookSourceGroup: bookSourceGroupParam,
              bookSourceType: bookSourceTypeParam,
              bookUrlPattern: bookUrlPatternParam,
              customOrder: customOrderParam,
              enabled: enabledParam,
              enabledExplore: enabledExploreParam,
              jsLib: jsLibParam,
              enabledCookieJar: enabledCookieJarParam,
              concurrentRate: concurrentRateParam,
              header: headerParam,
              loginUrl: loginUrlParam,
              loginUi: loginUiParam,
              loginCheckJs: loginCheckJsParam,
              coverDecodeJs: coverDecodeJsParam,
              bookSourceComment: bookSourceCommentParam,
              variableComment: variableCommentParam,
              lastUpdateTime: lastUpdateTimeParam,
              respondTime: respondTimeParam,
              weight: weightParam,
              exploreUrl: exploreUrlParam,
              exploreScreen: exploreScreenParam,
              searchUrl: searchUrlParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [BookSource] entity fields to define ObjectBox queries.
class BookSource_ {
  /// See [BookSource.id].
  static final id =
      obx.QueryIntegerProperty<BookSource>(_entities[0].properties[0]);

  /// See [BookSource.bookSourceUrl].
  static final bookSourceUrl =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[1]);

  /// See [BookSource.bookSourceName].
  static final bookSourceName =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[2]);

  /// See [BookSource.bookSourceGroup].
  static final bookSourceGroup =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[3]);

  /// See [BookSource.bookSourceType].
  static final bookSourceType =
      obx.QueryIntegerProperty<BookSource>(_entities[0].properties[4]);

  /// See [BookSource.bookUrlPattern].
  static final bookUrlPattern =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[5]);

  /// See [BookSource.customOrder].
  static final customOrder =
      obx.QueryIntegerProperty<BookSource>(_entities[0].properties[6]);

  /// See [BookSource.enabled].
  static final enabled =
      obx.QueryBooleanProperty<BookSource>(_entities[0].properties[7]);

  /// See [BookSource.enabledExplore].
  static final enabledExplore =
      obx.QueryBooleanProperty<BookSource>(_entities[0].properties[8]);

  /// See [BookSource.jsLib].
  static final jsLib =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[9]);

  /// See [BookSource.enabledCookieJar].
  static final enabledCookieJar =
      obx.QueryBooleanProperty<BookSource>(_entities[0].properties[10]);

  /// See [BookSource.concurrentRate].
  static final concurrentRate =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[11]);

  /// See [BookSource.header].
  static final header =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[12]);

  /// See [BookSource.loginUrl].
  static final loginUrl =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[13]);

  /// See [BookSource.loginUi].
  static final loginUi =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[14]);

  /// See [BookSource.loginCheckJs].
  static final loginCheckJs =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[15]);

  /// See [BookSource.coverDecodeJs].
  static final coverDecodeJs =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[16]);

  /// See [BookSource.bookSourceComment].
  static final bookSourceComment =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[17]);

  /// See [BookSource.variableComment].
  static final variableComment =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[18]);

  /// See [BookSource.lastUpdateTime].
  static final lastUpdateTime =
      obx.QueryIntegerProperty<BookSource>(_entities[0].properties[19]);

  /// See [BookSource.respondTime].
  static final respondTime =
      obx.QueryIntegerProperty<BookSource>(_entities[0].properties[20]);

  /// See [BookSource.weight].
  static final weight =
      obx.QueryIntegerProperty<BookSource>(_entities[0].properties[21]);

  /// See [BookSource.exploreUrl].
  static final exploreUrl =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[22]);

  /// See [BookSource.exploreScreen].
  static final exploreScreen =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[23]);

  /// See [BookSource.searchUrl].
  static final searchUrl =
      obx.QueryStringProperty<BookSource>(_entities[0].properties[24]);
}
